cmake_minimum_required(VERSION 2.6)

PROJECT(FreePhyloTree)

INCLUDE(FindDoxygen)

IF (DOXYGEN_EXECUTABLE)
ADD_CUSTOM_TARGET(doc COMMAND ${DOXYGEN_EXECUTABLE} "doc/Doxyfile")
ENDIF(DOXYGEN_EXECUTABLE)

FIND_PACKAGE(Qt4 REQUIRED)

INCLUDE_DIRECTORIES(/usr/include/freetype2/)

SET(FLEXSRC GraphicEngine/LexerWiki.l)
SET(FLEXOUT GraphicEngine/LexerWiki.cpp)

FIND_PACKAGE(FLEX)

FLEX_TARGET(Scanner ${FLEXSRC} ${FLEXOUT})

AUX_SOURCE_DIRECTORY(Tree TREE)
AUX_SOURCE_DIRECTORY(VecXf VEC)
AUX_SOURCE_DIRECTORY(Strategies STRGY)
AUX_SOURCE_DIRECTORY(Strategies/Color COLOR)
AUX_SOURCE_DIRECTORY(Strategies/Loc LOC)
AUX_SOURCE_DIRECTORY(GraphicEngine GRAPHIC)

SET(QT_USE_QTOPENGL TRUE)
SET(QT_USE_QTWEBKIT TRUE)
INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})

QT4_WRAP_CPP(MOC_HEADERS GraphicEngine/GraphicEngine.hpp)

SET(PHYLOTREE PhyloTree PhyloNode IteratorPhyloTree)
SET(TREES ${VEC} ${TREE} ${STRGY} ${COLOR} ${LOC} ${PHYLOTREE})
SET(SRC ${TREES} ${GRAPHIC} ${FLEX_Scanner_OUTPUTS} FreePhyloTree program)

IF(CMAKE_COMPILER_IS_GNUCXX)
    SET(CMAKE_CXX_FLAGS "-std=c++0x")        ## c++0x
ENDIF()

ADD_EXECUTABLE(FreePhyloTree ${SRC} ${MOC_HEADERS})

TARGET_LINK_LIBRARIES(FreePhyloTree ftgl m ${QT_LIBRARIES} curl)
